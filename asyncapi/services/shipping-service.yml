asyncapi: 3.0.0
info:
  title: Shipping Service
  version: 1.0.0
  description: >
    Handles all logic related to preparing and dispatching shipments. It
    operates on a request-reply basis with the Order Service.

channels:
  shipmentRequest:
    address: 'ecommerce/shipping/request'
    messages:
      ShipmentPreparationRequested:
        $ref: '#/components/messages/ShipmentPreparationRequested'

  # Note: The reply channel is not explicitly defined here because this service
  # publishes to the dynamic 'responseTopic' provided in the request message.
  # We define the message that will be sent as a reply in the components section.

operations:
  onShipmentRequest:
    action: receive
    channel:
      $ref: '#/channels/shipmentRequest'

  sendShipmentReply:
    action: send
    # This operation sends a message, but the channel is dynamic based on the
    # incoming request's responseTopic. This is a key concept in request-reply.
    messages:
      - $ref: '#/components/messages/ShipmentPrepared'

components:
  messages:
    ShipmentPreparationRequested:
      summary: A request to prepare an order for shipment.
      correlationId:
        location: '$message.header#/correlationId'
      payload:
        $ref: '../common/schemas/OrderPayload.yml'
      bindings:
        mqtt:
          # This binding indicates that this service EXPECTS a responseTopic in the header.
          responseTopic:
            type: string

    ShipmentPrepared:
      summary: A confirmation that the shipment has been prepared.
      correlationId:
        location: '$message.header#/correlationId'
      payload:
        type: object
        properties:
          orderId:
            type: string
          trackingNumber:
            type: string