name: 'Publish AsyncAPI Docs'

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install AsyncAPI CLI
        run: |
          npm install -g @asyncapi/cli

      - name: Validate, Bundle and Generate Docs (loop)
        run: |
          set -euo pipefail
          echo "Looking for services under asyncapi/services/"

          # if there are no service directories, exit gracefully
          if [ ! -d "asyncapi/services" ]; then
            echo "No asyncapi/services directory found — nothing to do."
            exit 0
          fi

          shopt -s nullglob
          for dir in asyncapi/services/*/; do
            if [ -d "$dir" ]; then
              service=$(basename "$dir")
              echo "----- Processing Service: ${service} -----"
              SERVICE_PATH="asyncapi/services/${service}"
              INPUT_FILE="${SERVICE_PATH}/asyncapi.yml"
              if [ ! -f "${INPUT_FILE}" ]; then
                echo "Warning: ${INPUT_FILE} not found — skipping ${service}"
                continue
              fi

              BUNDLED_FILE="dist/bundled/${service}.yml"
              OUTPUT_DIR="dist/docs/${service}"

              mkdir -p dist/bundled
              mkdir -p "${OUTPUT_DIR}"

              echo "Validating ${INPUT_FILE}..."
              asyncapi validate "${INPUT_FILE}"

              echo "Bundling ${INPUT_FILE} -> ${BUNDLED_FILE}..."
              asyncapi bundle "${INPUT_FILE}" --output "${BUNDLED_FILE}"

              echo "Generating HTML docs -> ${OUTPUT_DIR}..."
              asyncapi generate fromTemplate "${BUNDLED_FILE}" @asyncapi/html-template --output "${OUTPUT_DIR}" --use-new-generator --force-write
            fi
          done
          shopt -u nullglob

      - name: Create Index Page
        run: |
          echo '<!DOCTYPE html><html><head><meta charset="utf-8"><title>AsyncAPI Documentation</title></head><body><h1>Service Documentation</h1><ul>' > dist/docs/index.html
          if [ -d "asyncapi/services" ]; then
            for dir in asyncapi/services/*/; do
              if [ -d "$dir" ]; then
                service=$(basename "$dir")
                if [ -f "dist/docs/${service}/index.html" ]; then
                  echo "<li><a href=\"./${service}/index.html\">${service}</a></li>" >> dist/docs/index.html
                else
                  echo "<li>${service} (no generated docs)</li>" >> dist/docs/index.html
                fi
              fi
            done
          fi
          echo '</ul></body></html>' >> dist/docs/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4